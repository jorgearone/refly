services:
  # Base de datos PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: refly-db-${EASYPANEL_PROJECT_NAME:-refly}
    restart: unless-stopped
    environment:
      POSTGRES_DB: refly
      POSTGRES_USER: refly
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-refly_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U refly']
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis para caché
  redis:
    image: redis:7-alpine
    container_name: refly-redis-${EASYPANEL_PROJECT_NAME:-refly}
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  # MinIO para almacenamiento
  minio:
    image: minio/minio:RELEASE.2025-01-20T14-49-07Z
    container_name: refly-minio-${EASYPANEL_PROJECT_NAME:-refly}
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data
    ports:
      - "9001:9000"  # API
      - "9002:9001"  # Console
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 10s
      retries: 3

  # Qdrant para búsqueda vectorial
  qdrant:
    image: qdrant/qdrant:v1.13.1
    container_name: refly-qdrant-${EASYPANEL_PROJECT_NAME:-refly}
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6334:6333"
    healthcheck:
      test: ['CMD-SHELL', "curl -s http://localhost:6333/healthz | grep -q 'healthz check passed' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend
  api:
    image: reflyai/refly-api:latest
    container_name: refly-api-${EASYPANEL_PROJECT_NAME:-refly}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    ports:
      - "8800:5800"
      - "8801:5801"
    environment:
      # Base de datos
      DATABASE_URL: postgresql://refly:${POSTGRES_PASSWORD:-refly_secure_password}@db:5432/refly?schema=refly
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # MinIO
      MINIO_INTERNAL_ENDPOINT: minio
      MINIO_INTERNAL_PORT: 9000
      MINIO_INTERNAL_USE_SSL: false
      MINIO_INTERNAL_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_INTERNAL_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_INTERNAL_BUCKET: refly-internal
      
      MINIO_EXTERNAL_ENDPOINT: minio
      MINIO_EXTERNAL_PORT: 9000
      MINIO_EXTERNAL_USE_SSL: false
      MINIO_EXTERNAL_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_EXTERNAL_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_EXTERNAL_BUCKET: refly-external
      
      # Qdrant
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      
      # Configuración general
      NODE_ENV: production
      PORT: 5800
      WS_PORT: 5801
      
      # JWT y autenticación
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_EXPIRATION_TIME: 6h
      JWT_REFRESH_EXPIRATION_TIME: 7d
      
      # APIs opcionales (configúralas en variables de entorno)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-}
      SERPER_API_KEY: ${SERPER_API_KEY:-}
      
      # Embeddings
      EMBEDDINGS_PROVIDER: ${EMBEDDINGS_PROVIDER:-jina}
      EMBEDDINGS_MODEL_NAME: ${EMBEDDINGS_MODEL_NAME:-jina-embeddings-v3}
      JINA_API_KEY: ${JINA_API_KEY:-}
      
      # Saltar verificación de email en desarrollo
      AUTH_SKIP_VERIFICATION: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5800/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web
  web:
    image: reflyai/refly-web:latest
    container_name: refly-web-${EASYPANEL_PROJECT_NAME:-refly}
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "8080:80"
    environment:
      API_URL: /api
      COLLAB_URL: /collab
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:
  qdrant_data:

networks:
  default:
    driver: bridge
